{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx\";\nimport React, { Component } from 'react';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\n\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onGenerate = () => {\n      const _this$state = this.state,\n            row = _this$state.row,\n            column = _this$state.column;\n      this.props.generate_tiles(row, column);\n    };\n\n    this.setAllToDefault = () => {\n      this.props.generate_tiles({\n        row: 0,\n        column: 0\n      });\n      setTimeout(() => this.props.generate_tiles(this.state));\n    };\n\n    this.savethiscolor = () => {\n      const _this$props = this.props,\n            getcolors = _this$props.getcolors,\n            saveColor = _this$props.saveColor,\n            savecolors = _this$props.savecolors;\n      savecolors.push(getcolors);\n      saveColor(savecolors); //console.log(savecolors);\n      //const {row, column}=this.state;\n      //this.props.generate_tiles2(savecolors);\n\n      /*savecolors.map((item,idx)=>{\n        this.props.generate_tiles2(item);\n      })*/\n\n      this.setAllToDefault();\n      return;\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: 0,\n      savecolors: getDataFromLocalStorage('colortile'),\n      namecolors: getDataFromLocalStorage('colorname')\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          row = _this$state2.row,\n          column = _this$state2.column;\n    const _this$state3 = this.state,\n          savecolors = _this$state3.savecolors,\n          display = _this$state3.display;\n    return React.createElement(\"div\", {\n      className: \"generate-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"row\",\n      label: \"Row\",\n      value: row,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      name: \"column\",\n      label: \"Column\",\n      value: column,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"generate-form__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.onGenerate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Generate Tiles\"), React.createElement(\"button\", {\n      className: \"button button--grey\",\n      onClick: this.setAllToDefault,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Set all to default\"), React.createElement(\"button\", {\n      className: \"button button--saveimage\",\n      onClick: this.savethiscolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Save image\"), !!display && React.createElement(\"div\", {\n      className: \"inputname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"lable\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Nh\\u1EADp t\\xEAn \"), React.createElement(\"input\", {\n      className: \"form-input\",\n      type: \"text\",\n      name: \"form-input\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"History\", !!savecolors && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, savecolors.map((item, idx) => React.createElement(\"button\", {\n      key: idx,\n      onClick: () => this.setState({\n        data: item\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, `Item ${idx}`))), !!data && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, data.map((row, rowidx) => React.createElement(\"div\", {\n      key: rowidx,\n      className: \"tile-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, row.map((column, columnidx) => React.createElement(\"div\", {\n      className: \"tile\",\n      key: columnidx,\n      style: {\n        backgroundColor: column\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data //savecolors:state.saveColor.data\n\n});\n\nexport default connect(mapStateToProps, {\n  generate_tiles,\n  saveColor,\n  generate_tiles2\n})(GenerateForm); //chuyển tất cả các hàm trên về action","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx"],"names":["React","Component","TextInput","Link","generate_tiles","generate_tiles2","connect","saveColor","Tile","getDataFromLocalStorage","saveDataToLocalStorage","GenerateForm","constructor","onChange","e","setState","target","name","value","onGenerate","state","row","column","props","setAllToDefault","setTimeout","savethiscolor","getcolors","savecolors","push","data","display","namecolors","render","handleChange","map","item","idx","rowidx","columnidx","backgroundColor","mapStateToProps","getcolor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport {generate_tiles,generate_tiles2} from '../../../redux/actions/getColorActions';\nimport {connect} from 'react-redux';\nimport {saveColor} from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport {getDataFromLocalStorage,saveDataToLocalStorage} from '../../../utils/common';\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data:'',\n      display:0,\n      savecolors:getDataFromLocalStorage('colortile'),\n      namecolors:getDataFromLocalStorage('colorname')\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onGenerate = () => {\n    \n    const {row, column}=this.state;\n    this.props.generate_tiles(row,column);\n    \n    \n  }\n\n  setAllToDefault = () => {\n    this.props.generate_tiles({ row: 0, column: 0 });\n    setTimeout(() => this.props.generate_tiles(this.state));\n  }\n  savethiscolor=()=> {\n    const {getcolors,saveColor,savecolors} =this.props;\n    \n    savecolors.push(getcolors);\n    saveColor(savecolors);\n    //console.log(savecolors);\n    //const {row, column}=this.state;\n    //this.props.generate_tiles2(savecolors);\n    /*savecolors.map((item,idx)=>{\n      this.props.generate_tiles2(item);\n    })*/\n    this.setAllToDefault();\n    return;\n  }\n\n  render() {\n    const { data,row, column } = this.state;\n    const {savecolors,display}=this.state;\n    \n    return (\n      <div className=\"generate-form\">\n        <div>\n        <TextInput name=\"row\" label=\"Row\" value={ row } onChange={ this.onChange } />\n        <TextInput name=\"column\" label=\"Column\" value={ column } onChange={ this.onChange } />\n        <div className=\"generate-form__buttons\">\n          <button className=\"button\" onClick={ this.onGenerate }>Generate Tiles</button>\n          <button className=\"button button--grey\" onClick={ this.setAllToDefault }>Set all to default</button>\n          <button className=\"button button--saveimage\" onClick={ this.savethiscolor }>Save image</button>         \n          {!!display && <div className=\"inputname\">\n            <lable> Nhập tên </lable>\n            <input\n            className=\"form-input\"\n            type=\"text\"\n            name=\"form-input\"\n            onChange={this.handleChange}\n            />\n            </div>}\n        </div>\n        </div>\n        <div className=\"history\">History\n\n          {!!savecolors && <div className=\"history_item\">\n            { savecolors.map((item,idx)=>\n              <button key={idx} onClick={()=>this.setState({data:item})} >{`Item ${idx}`}</button>               \n            )}\n            </div>}\n            \n           {!!data && <div className=\"history_item\">\n            {data.map((row,rowidx)=>\n              <div key={rowidx} className=\"tile-row\"> \n                {row.map((column,columnidx)=>\n                  <div \n                  className=\"tile\" \n                  key={columnidx}\n                  style={{ backgroundColor: column} }\n                  \n                />\n                )}\n              </div>\n            )}\n            </div>  \n          } \n        </div>\n     </div> \n    )\n  }\n}\nconst mapStateToProps=state => ({\n  getcolors:state.getcolor.data,\n  //savecolors:state.saveColor.data\n})\nexport default connect(mapStateToProps,{generate_tiles,saveColor,generate_tiles2})(GenerateForm);\n//chuyển tất cả các hàm trên về action"]},"metadata":{},"sourceType":"module"}