{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx\";\nimport React, { Component } from 'react';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport GenerateHistory from './GenerateHistory';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\n\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onGenerate = () => {\n      const _this$state = this.state,\n            row = _this$state.row,\n            column = _this$state.column;\n      this.props.generate_tiles(row, column);\n    };\n\n    this.setAllToDefault = () => {\n      this.props.generate_tiles({\n        row: 0,\n        column: 0\n      });\n      setTimeout(() => this.props.generate_tiles(this.state));\n    };\n\n    this.savethiscolor = () => {\n      const _this$props = this.props,\n            getcolors = _this$props.getcolors,\n            saveColor = _this$props.saveColor;\n      const _this$state2 = this.state,\n            savecolors = _this$state2.savecolors,\n            display = _this$state2.display,\n            nameinput = _this$state2.nameinput,\n            namecolors = _this$state2.namecolors; //savecolors.push(getcolors);\n\n      console.log(getcolors);\n      console.log(nameinput);\n      savecolors.push(getcolors);\n      namecolors.push(nameinput);\n      saveDataToLocalStorage('colortile', savecolors);\n      saveDataToLocalStorage('colorname', namecolors); //console.log(savecolors);\n      //const {row, column}=this.state;\n      //this.props.generate_tiles2(savecolors);\n\n      /*savecolors.map((item,idx)=>{\n        this.props.generate_tiles2(item);\n      })*/\n\n      this.setState({\n        display: 0\n      });\n      this.setAllToDefault();\n      return;\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: 0,\n      nameinput: '',\n      savecolors: getDataFromLocalStorage('colortile') || [],\n      namecolors: getDataFromLocalStorage('colorname') || []\n    };\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          data = _this$state3.data,\n          row = _this$state3.row,\n          column = _this$state3.column;\n    const _this$state4 = this.state,\n          savecolors = _this$state4.savecolors,\n          display = _this$state4.display,\n          nameinput = _this$state4.nameinput;\n    return React.createElement(\"div\", {\n      className: \"generate-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"row\",\n      label: \"Row\",\n      value: row,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      name: \"column\",\n      label: \"Column\",\n      value: column,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"generate-form__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.onGenerate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Generate Tiles\"), React.createElement(\"button\", {\n      className: \"button button--grey\",\n      onClick: this.setAllToDefault,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Set all to default\"), React.createElement(\"button\", {\n      className: \"button button--saveimage\",\n      onClick: () => this.setState({\n        display: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Save image\"), !!display && React.createElement(\"div\", {\n      className: \"inputname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Nh\\u1EADp t\\xEAn \"), React.createElement(\"input\", {\n      className: \"form-input\",\n      type: \"text\",\n      name: \"form-input\",\n      onChange: e => this.setState({\n        nameinput: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.savethiscolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" L\\u01B0u t\\xEAn \")))), React.createElement(\"div\", {\n      className: \"history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"History\", !!savecolors && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, savecolors.map((data, idx) => React.createElement(GenerateHistory, {\n      key: idx,\n      idx: idx,\n      item: data,\n      name: namecolors[idx],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data //savecolors:state.saveColor.data\n\n});\n\nexport default connect(mapStateToProps, {\n  generate_tiles,\n  saveColor,\n  generate_tiles2\n})(GenerateForm); //chuyển tất cả các hàm trên về action","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx"],"names":["React","Component","TextInput","Link","generate_tiles","generate_tiles2","connect","saveColor","Tile","GenerateHistory","getDataFromLocalStorage","saveDataToLocalStorage","GenerateForm","constructor","onChange","e","setState","target","name","value","onGenerate","state","row","column","props","setAllToDefault","setTimeout","savethiscolor","getcolors","savecolors","display","nameinput","namecolors","console","log","push","data","render","map","idx","mapStateToProps","getcolor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport GenerateHistory from './GenerateHistory';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: 0,\n      nameinput: '',\n      savecolors: getDataFromLocalStorage('colortile') || [],\n      namecolors: getDataFromLocalStorage('colorname') || []\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onGenerate = () => {\n\n    const { row, column } = this.state;\n    this.props.generate_tiles(row, column);\n\n\n  }\n\n  setAllToDefault = () => {\n    this.props.generate_tiles({ row: 0, column: 0 });\n    setTimeout(() => this.props.generate_tiles(this.state));\n  }\n  savethiscolor = () => {\n    const { getcolors, saveColor } = this.props;\n    const { savecolors, display, nameinput,namecolors } = this.state;\n    //savecolors.push(getcolors);\n    console.log(getcolors);\n    console.log(nameinput);\n    savecolors.push(getcolors);\n    namecolors.push(nameinput);\n    saveDataToLocalStorage('colortile', savecolors);\n    saveDataToLocalStorage('colorname', namecolors);\n    //console.log(savecolors);\n    //const {row, column}=this.state;\n    //this.props.generate_tiles2(savecolors);\n    /*savecolors.map((item,idx)=>{\n      this.props.generate_tiles2(item);\n    })*/\n    this.setState({ display: 0 });\n    this.setAllToDefault();\n    return;\n  }\n  \n  render() {\n    const { data, row, column } = this.state;\n    const { savecolors, display, nameinput } = this.state;\n\n    return (\n      <div className=\"generate-form\">\n        <div>\n          <TextInput name=\"row\" label=\"Row\" value={row} onChange={this.onChange} />\n          <TextInput name=\"column\" label=\"Column\" value={column} onChange={this.onChange} />\n          <div className=\"generate-form__buttons\">\n            <button className=\"button\" onClick={this.onGenerate}>Generate Tiles</button>\n            <button className=\"button button--grey\" onClick={this.setAllToDefault}>Set all to default</button>\n            <button className=\"button button--saveimage\" onClick={() => this.setState({ display: 1 })}>Save image</button>\n            {!!display && <div className=\"inputname\">\n              <label> Nhập tên </label>\n              <input\n                className=\"form-input\"\n                type=\"text\"\n                name=\"form-input\"\n                onChange={e => this.setState({ nameinput: e.target.value })}\n              />\n              <button onClick={this.savethiscolor}> Lưu tên </button>\n            </div>}\n          </div>\n        </div>\n        <div className=\"history\">History\n          \n\n           {!!savecolors && <div className=\"history_item\">\n            { savecolors.map((data,idx)=>\n              <GenerateHistory\n              key={idx}\n              idx={idx}\n              item={data}\n              name={namecolors[idx]}\n              />               \n            )}\n            </div>} \n\n          {/* {!!data && <div className=\"history_item\">\n            {data.map((row, rowidx) =>\n              <div key={rowidx} className=\"tile-row\">\n                {row.map((column, columnidx) =>\n                  <div\n                    className=\"tile\"\n                    key={columnidx}\n                    style={{ backgroundColor: column }}\n\n                  />\n                )}\n              </div>\n            )}\n          </div>\n          } */}\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  //savecolors:state.saveColor.data\n})\nexport default connect(mapStateToProps, { generate_tiles, saveColor, generate_tiles2 })(GenerateForm);\n//chuyển tất cả các hàm trên về action"]},"metadata":{},"sourceType":"module"}