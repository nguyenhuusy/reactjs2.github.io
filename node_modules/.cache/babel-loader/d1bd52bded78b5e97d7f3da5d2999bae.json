{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\n\nclass GenerateHistory extends Component {\n  constructor() {\n    super();\n\n    this.generateitem = () => {\n      this.setState();\n    };\n\n    this.deleteTile = () => {\n      const _this$state = this.state,\n            savecolors = _this$state.savecolors,\n            namecolors = _this$state.namecolors;\n      const _this$props = this.props,\n            item = _this$props.item,\n            name = _this$props.name;\n      const colortileUpdate = savecolors.filter(data => JSON.stringify(savecolors.data) !== JSON.stringify(item));\n      const nameUpdate = namecolors.filter(a => JSON.stringify(namecolors[a]) !== JSON.stringify(name)); // console.log(JSON.stringify(savecolors))\n\n      console.log('name', JSON.stringify(name));\n      console.log('namecolors', JSON.stringify(namecolors));\n      console.log('kq', nameUpdate);\n      saveDataToLocalStorage('colortile', colortileUpdate);\n      saveDataToLocalStorage('colorname', nameUpdate);\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: 0,\n      nameinput: '',\n      savecolors: getDataFromLocalStorage('colortile'),\n      namecolors: getDataFromLocalStorage('colorname')\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          item = _this$props2.item,\n          name = _this$props2.name,\n          idx = _this$props2.idx;\n    const _this$state2 = this.state,\n          display = _this$state2.display,\n          namecolors = _this$state2.namecolors;\n    return React.createElement(\"div\", {\n      className: \"generate_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      key: idx,\n      onClick: () => this.setState({\n        display: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, name), !!display && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.deleteTile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Delete\"), item.map((row, rowidx) => React.createElement(\"div\", {\n      key: rowidx,\n      className: \"tile-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, row.map((column, columnidx) => React.createElement(\"div\", {\n      className: \"tile\",\n      key: columnidx,\n      style: {\n        backgroundColor: column\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data\n});\n\nexport default connect(mapStateToProps, {\n  saveColor,\n  generate_tiles2\n})(GenerateHistory);","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx"],"names":["React","Component","connect","generate_tiles2","saveColor","getDataFromLocalStorage","saveDataToLocalStorage","GenerateHistory","constructor","generateitem","setState","deleteTile","state","savecolors","namecolors","props","item","name","colortileUpdate","filter","data","JSON","stringify","nameUpdate","a","console","log","row","column","display","nameinput","render","idx","map","rowidx","columnidx","backgroundColor","mapStateToProps","getcolors","getcolor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\nimport { getDataFromLocalStorage, saveDataToLocalStorage } from '../../../utils/common';\nclass GenerateHistory extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            row: 0,\n            column: 0,\n            data: '',\n            display: 0,\n            nameinput: '',\n            savecolors: getDataFromLocalStorage('colortile'),\n            namecolors: getDataFromLocalStorage('colorname')\n        }\n    }\n    generateitem=()=>{\n        this.setState()\n    }\n    deleteTile=()=>{\n        const {savecolors,namecolors}=this.state;\n        const {item,name}=this.props;\n        const colortileUpdate=savecolors.filter((data)=>JSON.stringify(savecolors.data)!==JSON.stringify(item));\n        const nameUpdate=namecolors.filter((a)=>JSON.stringify(namecolors[a])!==JSON.stringify(name));\n        // console.log(JSON.stringify(savecolors))\n        console.log('name',JSON.stringify(name));\n        console.log('namecolors',JSON.stringify(namecolors));\n        console.log('kq',nameUpdate);\n        saveDataToLocalStorage('colortile',colortileUpdate);\n        saveDataToLocalStorage('colorname',nameUpdate);\n    }\n    render() {\n        const {item,name,idx}=this.props;\n        const {display,namecolors}=this.state;\n        \n        return (\n            <div className=\"generate_history\">\n             <button key={idx} onClick={()=>this.setState({display:1})}>{name}</button>   \n             {!!display && <div className=\"history_item\">\n                 <button onClick={this.deleteTile}>Delete</button>\n            {item.map((row, rowidx) =>\n              <div key={rowidx} className=\"tile-row\">\n                {row.map((column, columnidx) =>\n                  <div\n                    className=\"tile\"\n                    key={columnidx}\n                    style={{ backgroundColor: column }}\n\n                  />\n                )}\n              </div>\n            )}\n          </div>\n          }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    getcolors: state.getcolor.data,\n    savecolors: state.saveColor.data\n})\nexport default connect(mapStateToProps, { saveColor, generate_tiles2 })(GenerateHistory);"]},"metadata":{},"sourceType":"module"}