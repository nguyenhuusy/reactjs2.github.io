{"ast":null,"code":"import _objectSpread from \"/Users/apple/Desktop/FrontEnd/huusy.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport Axios from 'axios';\nexport const parseJSON = response => {\n  return new Promise(resolve => {\n    resolve({\n      status: response.status,\n      statusText: response.statusText,\n      json: response.data\n    });\n  });\n};\nexport const headers = () => ({\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n});\nexport const request = (method, url, options) => new Promise((resolve, reject) => {\n  Axios(_objectSpread({\n    method: method,\n    url: url,\n    header: headers(),\n    withCredentials: false\n  }, options)).then(parseJSON).then(res => resolve(res.json)).catch(err => reject(err));\n});","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/huusy.github.io/src/utils/request.js"],"names":["Axios","parseJSON","response","Promise","resolve","status","statusText","json","data","headers","Accept","request","method","url","options","reject","header","withCredentials","then","res","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGC,QAAQ,IAAI;AACnC,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BA,IAAAA,OAAO,CAAC;AACNC,MAAAA,MAAM,EAAEH,QAAQ,CAACG,MADX;AAENC,MAAAA,UAAU,EAAEJ,QAAQ,CAACI,UAFf;AAGNC,MAAAA,IAAI,EAAEL,QAAQ,CAACM;AAHT,KAAD,CAAP;AAKD,GANM,CAAP;AAOD,CARM;AAUP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BC,EAAAA,MAAM,EAAE,kBADoB;AAE5B,kBAAgB,kBAFY;AAG5B,iCAA+B;AAHH,CAAP,CAAhB;AAMP,OAAO,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,OAAd,KAA0B,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUW,MAAV,KAAqB;AAChFf,EAAAA,KAAK;AACHY,IAAAA,MAAM,EAAEA,MADL;AAEHC,IAAAA,GAAG,EAAEA,GAFF;AAGHG,IAAAA,MAAM,EAAEP,OAAO,EAHZ;AAIHQ,IAAAA,eAAe,EAAE;AAJd,KAKAH,OALA,EAAL,CAMGI,IANH,CAMQjB,SANR,EAQGiB,IARH,CAQQC,GAAG,IAAIf,OAAO,CAACe,GAAG,CAACZ,IAAL,CARtB,EASGa,KATH,CASSC,GAAG,IAAIN,MAAM,CAACM,GAAD,CATtB;AAWD,CAZgD,CAA1C","sourcesContent":["import Axios from 'axios';\n\nexport const parseJSON = response => {\n  return new Promise(resolve => {\n    resolve({\n      status: response.status,\n      statusText: response.statusText,\n      json: response.data,\n    })\n  })\n}\n\nexport const headers = () => ({\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n})\n\nexport const request = (method, url, options) => new Promise((resolve, reject) => {\n  Axios({\n    method: method,\n    url: url,\n    header: headers(),\n    withCredentials: false,\n    ...options,\n  }).then(parseJSON)\n  \n    .then(res => resolve(res.json))\n    .catch(err => reject(err));\n   \n}\n\n)\n"]},"metadata":{},"sourceType":"module"}