{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx\";\nimport React, { Component } from 'react';\nimport { generateTiles } from '../../../redux/actions/tileActions';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\n\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onGenerate = () => {\n      const _this$state = this.state,\n            row = _this$state.row,\n            column = _this$state.column;\n      this.props.generate_tiles(row, column);\n    };\n\n    this.setAllToDefault = () => {\n      this.props.generate_tiles({\n        row: 0,\n        column: 0\n      });\n      setTimeout(() => this.props.generate_tiles(this.state));\n    };\n\n    this.savethiscolor = () => {\n      const _this$props = this.props,\n            getcolors = _this$props.getcolors,\n            saveColor = _this$props.saveColor,\n            savecolors = _this$props.savecolors;\n      savecolors.push(getcolors);\n      saveColor(savecolors); //console.log(savecolors);\n      //const {row, column}=this.state;\n      //this.props.generate_tiles2(savecolors);\n\n      /*savecolors.map((item,idx)=>{\n        this.props.generate_tiles2(item);\n      })*/\n\n      this.setAllToDefault();\n      return;\n    };\n\n    this.deletetile = () => {\n      const data = this.state.data;\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          row = _this$state2.row,\n          column = _this$state2.column;\n    const savecolors = this.props.savecolors;\n    return React.createElement(\"div\", {\n      className: \"generate-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"row\",\n      label: \"Row\",\n      value: row,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      name: \"column\",\n      label: \"Column\",\n      value: column,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"generate-form__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.onGenerate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Generate Tiles\"), React.createElement(\"button\", {\n      className: \"button button--grey\",\n      onClick: this.setAllToDefault,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Set all to default\"), React.createElement(\"button\", {\n      className: \"button button--saveimage\",\n      onClick: this.savethiscolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Save image\"))), React.createElement(\"div\", {\n      className: \"history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"History\", !!savecolors && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, savecolors.map((item, idx) => React.createElement(\"button\", {\n      key: idx,\n      onClick: () => this.setState({\n        data: item\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, `Item ${idx}`))), !!data && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, data.map((row, rowidx) => React.createElement(\"div\", {\n      key: rowidx,\n      className: \"tile-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, row.map((column, columnidx) => React.createElement(\"div\", {\n      className: \"tile\",\n      key: columnidx,\n      style: {\n        backgroundColor: column\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      onClick: this.deletetile(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Delete this tile\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data\n});\n\nexport default connect(mapStateToProps, {\n  generate_tiles,\n  saveColor,\n  generate_tiles2\n})(GenerateForm); //chuyển tất cả các hàm trên về action","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx"],"names":["React","Component","generateTiles","TextInput","Link","generate_tiles","generate_tiles2","connect","saveColor","Tile","GenerateForm","constructor","onChange","e","setState","target","name","value","onGenerate","state","row","column","props","setAllToDefault","setTimeout","savethiscolor","getcolors","savecolors","push","deletetile","data","render","map","item","idx","rowidx","columnidx","backgroundColor","mapStateToProps","getcolor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { generateTiles } from '../../../redux/actions/tileActions';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport {generate_tiles,generate_tiles2} from '../../../redux/actions/getColorActions';\nimport {connect} from 'react-redux';\nimport {saveColor} from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data:''\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onGenerate = () => {\n    \n    const {row, column}=this.state;\n    this.props.generate_tiles(row,column);\n    \n    \n  }\n\n  setAllToDefault = () => {\n    this.props.generate_tiles({ row: 0, column: 0 });\n    setTimeout(() => this.props.generate_tiles(this.state));\n  }\n  savethiscolor=()=> {\n    const {getcolors,saveColor,savecolors} =this.props;\n    \n    savecolors.push(getcolors);\n    saveColor(savecolors);\n    //console.log(savecolors);\n    //const {row, column}=this.state;\n    //this.props.generate_tiles2(savecolors);\n    /*savecolors.map((item,idx)=>{\n      this.props.generate_tiles2(item);\n    })*/\n    this.setAllToDefault();\n    return;\n  }\n  deletetile=()=> {\n    const {data}=this.state;\n    \n  }\n  render() {\n    const { data,row, column } = this.state;\n    const {savecolors}=this.props;\n    \n    return (\n      <div className=\"generate-form\">\n        <div>\n        <TextInput name=\"row\" label=\"Row\" value={ row } onChange={ this.onChange } />\n        <TextInput name=\"column\" label=\"Column\" value={ column } onChange={ this.onChange } />\n        <div className=\"generate-form__buttons\">\n          <button className=\"button\" onClick={ this.onGenerate }>Generate Tiles</button>\n          <button className=\"button button--grey\" onClick={ this.setAllToDefault }>Set all to default</button>\n          <button className=\"button button--saveimage\" onClick={ this.savethiscolor }>Save image</button>         \n        </div>\n        </div>\n        <div className=\"history\">History\n\n          {!!savecolors && <div className=\"history_item\">\n            { savecolors.map((item,idx)=>\n              <button key={idx} onClick={()=>this.setState({data:item})} >{`Item ${idx}`}</button>               \n            )}\n            </div>}\n            \n           {!!data && <div className=\"history_item\">\n            {data.map((row,rowidx)=>\n              <div key={rowidx} className=\"tile-row\"> \n                {row.map((column,columnidx)=>\n                  <div \n                  className=\"tile\" \n                  key={columnidx}\n                  style={{ backgroundColor: column} }\n                  \n                />\n                )}\n              </div>\n            )}\n            <button onClick={this.deletetile()}>Delete this tile</button>\n            </div>  \n          } \n        </div>\n     </div> \n    )\n  }\n}\nconst mapStateToProps=state => ({\n  getcolors:state.getcolor.data,\n  savecolors:state.saveColor.data\n})\nexport default connect(mapStateToProps,{generate_tiles,saveColor,generate_tiles2})(GenerateForm);\n//chuyển tất cả các hàm trên về action\n"]},"metadata":{},"sourceType":"module"}