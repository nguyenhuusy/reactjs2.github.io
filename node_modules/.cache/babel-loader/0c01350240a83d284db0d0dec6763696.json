{"ast":null,"code":"import { GET_COLOR, GENERATE_TILES } from '../type';\nimport { randomColor } from '../../utils/common';\nimport { defaultcolor } from '../../utils/common';\nexport const getcolor = data => dispatch => {\n  return dispatch({\n    type: GET_COLOR,\n    payload: data\n  });\n};\nexport const generate_tiles = (row, collumn) => dispatch => {\n  const data = [];\n\n  for (let i = 0; i < row; i++) {\n    data[i] = [];\n\n    for (let j = 0; j < collumn; j++) {\n      data[i][j] = defaultcolor;\n    }\n  }\n\n  return dispatch({\n    type: GENERATE_TILES,\n    payload: data\n  });\n};\nexport const generate_tiles2 = data => dispatch => {\n  return dispatch({\n    type: GENERATE_TILES,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/huusy.github.io/src/redux/actions/getColorActions.js"],"names":["GET_COLOR","GENERATE_TILES","randomColor","defaultcolor","getcolor","data","dispatch","type","payload","generate_tiles","row","collumn","i","j","generate_tiles2"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,cAAlB,QAAuC,SAAvC;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,OAAO,MAAMC,QAAQ,GAAGC,IAAD,IAASC,QAAQ,IAAE;AAEtC,SAAOA,QAAQ,CAAC;AACZC,IAAAA,IAAI,EAACP,SADO;AAEZQ,IAAAA,OAAO,EAACH;AAFI,GAAD,CAAf;AAIH,CANM;AAQP,OAAO,MAAMI,cAAc,GAAE,CAACC,GAAD,EAAKC,OAAL,KAAiBL,QAAQ,IAAG;AACrD,QAAMD,IAAI,GAAC,EAAX;;AACA,OAAK,IAAIO,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,GAAf,EAAmBE,CAAC,EAApB,EAAwB;AACpBP,IAAAA,IAAI,CAACO,CAAD,CAAJ,GAAQ,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,OAAf,EAAuBE,CAAC,EAAxB,EAA4B;AACxBR,MAAAA,IAAI,CAACO,CAAD,CAAJ,CAAQC,CAAR,IAAWV,YAAX;AACH;AACJ;;AACD,SAAOG,QAAQ,CAAC;AACZC,IAAAA,IAAI,EAACN,cADO;AAEZO,IAAAA,OAAO,EAACH;AAFI,GAAD,CAAf;AAKH,CAbM;AAcP,OAAO,MAAMS,eAAe,GAAGT,IAAD,IAAUC,QAAQ,IAAG;AAE/C,SAAOA,QAAQ,CAAC;AACZC,IAAAA,IAAI,EAACN,cADO;AAEZO,IAAAA,OAAO,EAACH;AAFI,GAAD,CAAf;AAKH,CAPM","sourcesContent":["import {GET_COLOR,GENERATE_TILES} from '../type';\nimport {randomColor} from '../../utils/common';\nimport {defaultcolor} from '../../utils/common';\nexport const getcolor =(data)=> dispatch=>{\n    \n    return dispatch({\n        type:GET_COLOR,\n        payload:data\n    })\n}\n\nexport const generate_tiles =(row,collumn) => dispatch =>{\n    const data=[];\n    for (let i=0;i<row;i++) {\n        data[i]=[];\n        for (let j=0;j<collumn;j++) {\n            data[i][j]=defaultcolor;\n        }\n    }\n    return dispatch({\n        type:GENERATE_TILES,\n        payload:data\n    })\n\n}\nexport const generate_tiles2 =(data) => dispatch =>{\n    \n    return dispatch({\n        type:GENERATE_TILES,\n        payload:data\n    })\n\n}"]},"metadata":{},"sourceType":"module"}