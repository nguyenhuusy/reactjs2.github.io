{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { saveColor } from '../../../redux/actions/saveColorActions';\n\nclass GenerateHistory extends Component {\n  constructor() {\n    super();\n\n    this.generateitem = () => {\n      const item = this.props.item; //savecolors.map {}\n      //this.props.generate_tiles2({item})\n\n      const _this$state = this.state,\n            data = _this$state.data,\n            display = _this$state.display;\n\n      if (display === false) {\n        this.setState({\n          data: item\n        });\n        this.setState({\n          display: true\n        });\n      } else {\n        this.setState({\n          display: false\n        });\n        this.setState({\n          data: ''\n        });\n      }\n    };\n\n    this.checkitem = () => {\n      const _this$props = this.props,\n            item = _this$props.item,\n            savecolors = _this$props.savecolors;\n      return savecolors !== item;\n    };\n\n    this.deleteitem = () => {\n      const _this$props2 = this.props,\n            item = _this$props2.item,\n            savecolors = _this$props2.savecolors; // savecolors.map((data,idx)=>{\n      //     console.log('data',data);\n      //     console.log('item',item);\n      //     if (data===item) {\n      //         data='';\n      //         console.log('haha')\n      //     }    \n      // })\n\n      saveColor(savecolors.filter(this.checkitem)); //console.log('redux state',savecolors);\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      display: false\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          item = _this$props3.item,\n          idx = _this$props3.idx; //var {item}=this.props;\n\n    const data = this.state.data;\n    const value = '';\n    return React.createElement(\"div\", {\n      className: \"generate_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      key: idx,\n      onClick: this.generateitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", `Item ${idx}`), !!data && React.createElement(\"button\", {\n      onClick: this.deleteitem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" delete \"), !!data && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, data.map((row, rowidx) => React.createElement(\"div\", {\n      key: rowidx,\n      className: \"tile-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, row.map((column, columnidx) => React.createElement(\"div\", {\n      className: \"tile\",\n      key: columnidx,\n      style: {\n        backgroundColor: column\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data\n});\n\nexport default connect(mapStateToProps, {\n  saveColor,\n  generate_tiles2\n})(GenerateHistory);","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateHistory.jsx"],"names":["React","Component","connect","generate_tiles2","saveColor","GenerateHistory","constructor","generateitem","item","props","state","data","display","setState","checkitem","savecolors","deleteitem","filter","row","column","render","idx","value","map","rowidx","columnidx","backgroundColor","mapStateToProps","getcolors","getcolor"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {generate_tiles2} from '../../../redux/actions/getColorActions';\nimport {saveColor} from '../../../redux/actions/saveColorActions';\nclass GenerateHistory extends Component {\n    constructor() {\n        super();\n    \n        this.state = {\n          row: 0,\n          column: 0,\n          data:'',\n          display:false\n        }\n      }\n        \ngenerateitem=()=> {\n    const {item}=this.props;\n    //savecolors.map {}\n    //this.props.generate_tiles2({item})\n    const {data,display}=this.state;\n    if (display===false) {\n        this.setState({data:item});\n        this.setState({display:true})\n    } else {\n        this.setState({display:false});\n        this.setState({data:''})\n    }\n}\n\ncheckitem=()=>{\n    const {item,savecolors}=this.props;\n    return savecolors!==item\n}\ndeleteitem=()=>{\nconst {item,savecolors}=this.props;\n// savecolors.map((data,idx)=>{\n//     console.log('data',data);\n//     console.log('item',item);\n//     if (data===item) {\n//         data='';\n//         console.log('haha')\n//     }    \n// })\nsaveColor(savecolors.filter(this.checkitem));\n//console.log('redux state',savecolors);\n}   \n    \n    render() {\n        const {item,idx}=this.props;\n        //var {item}=this.props;\n        const {data}=this.state;\n        const value='';\n        \n        return(\n            <div className=\"generate_history\">\n                \n                <button key={idx} onClick={this.generateitem}> {`Item ${idx}`}</button> \n                {!!data && <button onClick={this.deleteitem}> delete </button>}\n                {!!data && <div className=\"history_item\">\n                    {data.map((row,rowidx)=>\n                        <div key={rowidx} className=\"tile-row\"> \n                            {row.map((column,columnidx)=>\n                                <div \n                                    className=\"tile\" \n                                    key={columnidx}\n                                    style={{ backgroundColor: column} }\n                  />\n                )}\n              </div>\n                )}\n            \n            </div> \n           }\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state => ({\n  getcolors:state.getcolor.data,\n  savecolors:state.saveColor.data\n})\nexport default connect(mapStateToProps,{saveColor,generate_tiles2})(GenerateHistory);"]},"metadata":{},"sourceType":"module"}