{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx\";\nimport React, { Component } from 'react';\nimport { generateTiles } from '../../../redux/actions/tileActions';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor, saveName } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport GenerateHistory from './GenerateHistory';\n\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onGenerate = () => {\n      const _this$state = this.state,\n            row = _this$state.row,\n            column = _this$state.column;\n      this.props.generate_tiles(row, column);\n    };\n\n    this.setAllToDefault = () => {\n      this.props.generate_tiles({\n        row: 0,\n        column: 0\n      });\n      setTimeout(() => this.props.generate_tiles(this.state));\n    };\n\n    this.savethiscolor = () => {\n      const _this$props = this.props,\n            getcolors = _this$props.getcolors,\n            saveColor = _this$props.saveColor,\n            savecolors = _this$props.savecolors,\n            saveName = _this$props.saveName;\n      const nameinput = this.state.nameinput;\n      saveName(nameinput);\n      savecolors.push(getcolors);\n      saveColor(savecolors); //console.log(savecolors);\n      //const {row, column}=this.state;\n      //this.props.generate_tiles2(savecolors);\n\n      /*savecolors.map((item,idx)=>{\n        this.props.generate_tiles2(item);\n      })*/\n\n      this.setAllToDefault();\n      return;\n    };\n\n    this.deletetile = () => {\n      const data = this.state.data;\n      const savecolors = this.props.savecolors;\n      savecolors.map((item, idx) => {\n        if (item === data) {\n          this.setState({\n            data: ''\n          });\n        }\n      });\n    };\n\n    this.tiles = item => {\n      const data = this.state.data;\n      this.setState({\n        data: item\n      });\n    };\n\n    this.handleChange = e => {\n      const nametile = this.state.nametile;\n      this.setState({\n        nametile: e.target.value\n      });\n    };\n\n    this.displayinput = () => {\n      const display = this.state.display;\n\n      if (!display) {\n        this.setState({\n          display: 1\n        });\n      }\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      nameinput: '',\n      display: 0\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          data = _this$state2.data,\n          row = _this$state2.row,\n          column = _this$state2.column,\n          nameinput = _this$state2.nameinput;\n    const _this$props2 = this.props,\n          savecolors = _this$props2.savecolors,\n          saveName = _this$props2.saveName;\n    return React.createElement(\"div\", {\n      className: \"generate-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"row\",\n      label: \"Row\",\n      value: row,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      name: \"column\",\n      label: \"Column\",\n      value: column,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"generate-form__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.onGenerate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Generate Tiles\"), React.createElement(\"button\", {\n      className: \"button button--grey\",\n      onClick: this.setAllToDefault,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Set all to default\"), React.createElement(\"button\", {\n      className: \"button button--saveimage\",\n      onClick: this.displayinput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Save image\"), !!display && React.createElement(\"div\", {\n      className: \"input-alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"input-alert-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"T\\xEAn image\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"input-alert-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.savethiscolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Save the name\")))), React.createElement(\"div\", {\n      className: \"history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"History\", !!savecolors && React.createElement(\"div\", {\n      className: \"history_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, savecolors.map((item, idx) => React.createElement(GenerateHistory, {\n      item: item,\n      key: idx,\n      idx: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) // <button key={idx} onClick={()=>this.setState({data:item})} >{`Item ${idx}`}</button>               \n    ))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data\n});\n\nexport default connect(mapStateToProps, {\n  generate_tiles,\n  saveColor,\n  saveName,\n  generate_tiles2\n})(GenerateForm); //chuyển tất cả các hàm trên về action","map":{"version":3,"sources":["/Users/apple/Desktop/FrontEnd/react-nordic5/src/pages/ColorfulTiles/GenerateForm/GenerateForm.jsx"],"names":["React","Component","generateTiles","TextInput","Link","generate_tiles","generate_tiles2","connect","saveColor","saveName","Tile","GenerateHistory","GenerateForm","constructor","onChange","e","setState","target","name","value","onGenerate","state","row","column","props","setAllToDefault","setTimeout","savethiscolor","getcolors","savecolors","nameinput","push","deletetile","data","map","item","idx","tiles","handleChange","nametile","displayinput","display","render","mapStateToProps","getcolor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { generateTiles } from '../../../redux/actions/tileActions';\nimport TextInput from '../../../components/Forms/TextInput';\nimport './GenerateForm.scss';\nimport { Link } from 'react-router-dom';\nimport { generate_tiles, generate_tiles2 } from '../../../redux/actions/getColorActions';\nimport { connect } from 'react-redux';\nimport { saveColor,saveName } from '../../../redux/actions/saveColorActions';\nimport Tile from '../../../components/Tile';\nimport GenerateHistory from './GenerateHistory';\nclass GenerateForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      row: 0,\n      column: 0,\n      data: '',\n      nameinput:'',\n      display:0\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onGenerate = () => {\n\n    const { row, column } = this.state;\n    this.props.generate_tiles(row, column);\n\n\n  }\n\n  setAllToDefault = () => {\n    this.props.generate_tiles({ row: 0, column: 0 });\n    setTimeout(() => this.props.generate_tiles(this.state));\n  }\n  savethiscolor = () => {\n    const { getcolors, saveColor, savecolors, saveName } = this.props;\n    const {nameinput}=this.state;\n    saveName(nameinput);\n    savecolors.push(getcolors);\n    saveColor(savecolors);\n    //console.log(savecolors);\n    //const {row, column}=this.state;\n    //this.props.generate_tiles2(savecolors);\n    /*savecolors.map((item,idx)=>{\n      this.props.generate_tiles2(item);\n    })*/\n    this.setAllToDefault();\n    return;\n  }\n  deletetile = () => {\n    const { data } = this.state;\n    const { savecolors } = this.props;\n    savecolors.map((item, idx) => {\n      if (item === data) {\n        this.setState({ data: '' });\n      }\n    })\n  }\n  tiles = (item) => {\n    const { data } = this.state;\n    this.setState({ data: item });\n  }\n  handleChange=e=>{\n    const {nametile}=this.state;\n    \n    this.setState({nametile:e.target.value})\n  }\n  displayinput=()=>{\n    const {display}=this.state;\n    if (!display) {\n      this.setState({display:1})\n    }\n    \n  }\n  render() {\n    const { data, row, column, nameinput } = this.state;\n    const { savecolors,saveName } = this.props;\n\n    return (\n      <div className=\"generate-form\">\n        <div>\n          <TextInput name=\"row\" label=\"Row\" value={row} onChange={this.onChange} />\n          <TextInput name=\"column\" label=\"Column\" value={column} onChange={this.onChange} />\n          <div className=\"generate-form__buttons\">\n            <button className=\"button\" onClick={this.onGenerate}>Generate Tiles</button>\n            <button className=\"button button--grey\" onClick={this.setAllToDefault}>Set all to default</button>\n            <button className=\"button button--saveimage\" onClick={this.displayinput}>Save image</button>\n            {!!display && <div className=\"input-alert\">\n            <label className=\"input-alert-name\">Tên image</label>\n            <input\n            type=\"text\"\n            name=\"input-alert-name\"\n            onChange={this.handleChange}\n            />\n            <button onClick={this.savethiscolor}>Save the name</button>  \n            </div>}\n          </div>\n        </div>\n        <div className=\"history\">History\n          \n          {!!savecolors && <div className=\"history_item\">\n            {savecolors.map((item, idx) =>\n              <GenerateHistory\n                item={item}\n                key={idx}\n                idx={idx}\n\n              />\n              // <button key={idx} onClick={()=>this.setState({data:item})} >{`Item ${idx}`}</button>               \n\n            )}\n          </div>}\n\n\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  getcolors: state.getcolor.data,\n  savecolors: state.saveColor.data\n})\nexport default connect(mapStateToProps, { generate_tiles, saveColor, saveName,generate_tiles2 })(GenerateForm);\n//chuyển tất cả các hàm trên về action\n"]},"metadata":{},"sourceType":"module"}